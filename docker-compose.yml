version: '3.4'

services:

  ###################################################################################
  eshopcloudnative.catalog.webui:
    container_name: catalog_webui
    image: ${DOCKER_REGISTRY-}eshop-catalog-web
    build:
      context: ./catalog
      dockerfile: eShopCloudNative.Catalog.WebUI/Dockerfile
    networks:
      - eshop
    mem_limit: 150m
    depends_on:
      eshopcloudnative.catalog.bootstrap:
        condition: service_healthy
      eshopcloudnative.catalog.servicehost:
        condition: service_started
    #  api:
    #    condition: service_started #service_completed_successfully (visual studio n√£o suporta)

  ###################################################################################
  eshopcloudnative.catalog.bootstrap:
    container_name: catalog_bootstrap
    image: ${DOCKER_REGISTRY-}eshop-catalog-bootstrap
    build:
      context: ./catalog
      dockerfile: eShopCloudNative.Catalog.Bootstrap/Dockerfile
    healthcheck:
      test: [ "CMD-SHELL", "cat", "/bootstrap.ok" ]
      interval: 5s
      timeout: 15s
      retries: 10
      start_period: 5s    
    networks:
      - eshop
    mem_limit: 200m


  ###################################################################################
  eshopcloudnative.catalog.servicehost:
    container_name: catalog_host
    image: ${DOCKER_REGISTRY-}eshop-catalog-servicehost
    build:
      context: ./catalog
      dockerfile: eShopCloudNative.Catalog.ServiceHost/Dockerfile
    environment:
      {
        "boostrap__minio": false,
        "boostrap__postgres": false,
        "boostrap__sample-data": false,
        "boostrap__rabbitmq": false,
        "boostrap__healthcheck": false,
        "boostrap__web-api": true
      }
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:80/ping" ]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - eshop
    mem_limit: 200m
    depends_on:
      eshopcloudnative.catalog.bootstrap:
        condition: service_healthy
      #depends_on:
      #  postgres:
      #    condition: service_healthy
      #  rabbitmq:
      #    condition: service_healthy
      #  redis:
      #    condition: service_started
      #  minio:
      #    condition: service_started

networks:
  eshop:
    external: true
  log:
    external: true

volumes:
  rabbitmq_data:
  pgadmin_data:
  minio_data:
  opensearch_data:


