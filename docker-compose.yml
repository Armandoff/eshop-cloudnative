version: '3.4'

services:
  eshopcloudnative.catalog.webui:
    image: ${DOCKER_REGISTRY-}eshop-catalog-web
    build:
      context: ./catalog
      dockerfile: eShopCloudNative.Catalog.WebUI/Dockerfile
    networks:
      - eshop-front

  redis-front:
    image: redis:7.0.4
    container_name: redis-front
    networks:
      - eshop-front

  ##

  redis-back:
    image: redis:7.0.4
    container_name: redis-back
    networks:
      - eshop-back

  postgres:
    image: postgres:14.4
    container_name: postgres
    environment:
      {
        "POSTGRES_DB": "eshop_db",
        "POSTGRES_USER": "eshop_user",
        "POSTGRES_PASSWORD": "eshop_pass"
      }
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "--dbname=eshop_db",
          "--username=eshop_user"
        ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - eshop-back

  pgadmin4:
    image: dpage/pgadmin4:6.5
    container_name: pgadmin
    hostname: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.admin
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - "pgadmin_data:/var/lib/pgadmin/"
      - "./infra/pgadmin/servers.json:/pgadmin4/servers.json"
    ports:
      - "82:80"
    networks:
      - eshop-back
    depends_on:
      postgres:
        condition: service_healthy

  rabbitmq:
    container_name: RabbitMQ
    hostname: rabbitmq
    build:
      context: ./infra/rabbitmq
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/mnesia
    ports:
      - "15672:15672" #management # habilitado visualização no browser
      #- "15692:15692" #prometheus # desnecessário
      - "5672:5672" #amqp       # desnecessário
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -I -s -L http://localhost:15672 || exit 1"
        ]
      interval: 30s
      timeout: 20s
      retries: 5
    networks:
      - eshop-back

networks:
  eshop-front:
    driver: bridge
  eshop-back:
    driver: bridge

volumes:
  rabbitmq_data:
  pgadmin_data:


